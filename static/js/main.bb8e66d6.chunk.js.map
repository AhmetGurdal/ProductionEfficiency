{"version":3,"sources":["production-efficiency/components/NavigBar.tsx","production-efficiency/constants/plants.tsx","production-efficiency/pages/Home.tsx","production-efficiency/pages/About.tsx","production-efficiency/App.tsx","index.tsx"],"names":["NavigBar","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","className","to","PLANT_LIST","name","description","requirements","minerals","unit","min","max","avg","Home","INITIAL_PLANT","useState","selectedPlantId","setSelectedPlantId","formFields","setFormFields","efficiency","setEfficiency","selectedPlant","handleInputChange","index","event","values","target","value","tempEfficieny","Object","keys","forEach","key","parseFloat","magicFunc","Container","fluid","Row","Col","md","Form","Group","controlId","Control","as","onChange","parseInt","Array","from","document","querySelectorAll","input","map","plant","requirement","placeholder","type","About","formRef","useRef","ref","onSubmit","preventDefault","collection","current","getElementsByClassName","element","console","log","getAttribute","defaultValue","Button","variant","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"mMAUaA,EAAW,WACpB,OACI,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,cAACJ,EAAA,EAAOK,SAAR,CAAiBC,GAAG,mBAApB,SACI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,IAA9B,kBAGA,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,SAA9B,4B,wCCyHPC,EAAsB,CA1Ib,CAClBJ,GAAI,EACJK,KAAM,SACNC,YAAa,+BACbC,aAAc,CACVC,SAAU,CACN,CACIH,KAAM,WACNI,KAAM,IACNC,IAAK,KACLC,IAAK,KACLC,IAAK,KAET,CACIP,KAAM,aACNI,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IAET,CACIP,KAAM,WACNI,KAAM,IACNC,IAAK,KACLC,IAAK,KACLC,IAAK,KAET,CACIP,KAAM,SACNI,KAAM,IACNC,IAAK,IACLC,IAAK,KACLC,IAAK,KAET,CACIP,KAAM,UACNI,KAAM,IACNC,IAAK,IACLC,IAAK,KACLC,IAAK,KAET,CACIP,KAAM,YACNI,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IAET,CACIP,KAAM,OACNI,KAAM,MACNC,IAAK,KACLC,IAAK,MACLC,IAAK,OAET,CACIP,KAAM,YACNI,KAAM,MACNC,IAAK,KACLC,IAAK,MACLC,IAAK,MAET,CACIP,KAAM,SACNI,KAAM,MACNC,IAAK,IACLC,IAAK,KACLC,IAAK,IAET,CACIP,KAAM,OACNI,KAAM,MACNC,IAAK,KACLC,IAAK,KACLC,IAAK,SAME,CACnBZ,GAAI,EACJK,KAAM,UACNC,YAAa,+BACbC,aAAc,CACVC,SAAU,CACN,CACIH,KAAM,WACNI,KAAM,IACNC,IAAK,KACLC,IAAK,KACLC,IAAK,KAET,CACIP,KAAM,aACNI,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IAET,CACIP,KAAM,YACNI,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IAET,CACIP,KAAM,OACNI,KAAM,MACNC,IAAK,KACLC,IAAK,MACLC,IAAK,OAET,CACIP,KAAM,YACNI,KAAM,MACNC,IAAK,KACLC,IAAK,MACLC,IAAK,MAET,CACIP,KAAM,SACNI,KAAM,MACNC,IAAK,IACLC,IAAK,KACLC,IAAK,IAET,CACIP,KAAM,OACNI,KAAM,MACNC,IAAK,KACLC,IAAK,KACLC,IAAK,UChIRC,EAAO,WAChB,IAAMC,EAAgBV,EAAW,GADX,EAKwBW,mBAC1CD,EAAcd,IANI,mBAKfgB,EALe,KAKEC,EALF,OAQcF,mBAAiC,IAR/C,mBAQfG,EARe,KAQHC,EARG,OAScJ,mBAAiB,GAT/B,mBASfK,EATe,KASHC,EATG,KAYhBC,EAAuBlB,EAAWY,GAgClCO,EAAoB,SACtBC,EACAC,GAEA,IAAMC,EAASR,EACfQ,EAAOF,GAASC,EAAME,OAAOC,MAC7BT,EAAcO,GAhBA,WACd,IAAIG,EAAgB,EAEpBC,OAAOC,KAAKb,GAAYc,SAAQ,SAACC,GAC7BJ,GAAiBK,WAAWhB,EAAWe,OAG3CZ,EAAcQ,GAUdM,IAoBJ,OACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACC,EAAA,EAAD,CAAKpC,UAAU,cAAf,SACI,cAACqC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,yDAA4BlB,EAAcjB,KAA1C,WAGR,uBACA,eAACoC,EAAA,EAAD,WACI,cAACH,EAAA,EAAD,CAAKpC,UAAU,yBAAf,SACI,cAACqC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAKC,MAAN,CACIC,UAAU,6BACVzC,UAAU,MAFd,SAII,cAACuC,EAAA,EAAKG,QAAN,CACIC,GAAG,SACHjB,MAAOZ,EACP8B,SA1EC,SAACrB,GAC1BR,EAAmB8B,SAAStB,EAAME,OAAOC,QAGzCP,EAAc,GACdF,EAAc,IAEd6B,MAAMC,KAAKC,SAASC,iBAAiB,UAAUnB,SAC3C,SAACoB,GAAD,OAAYA,EAAMxB,MAAQ,OA+DV,SAKKxB,EAAWiD,KA/DJ,SAACC,GAAD,OAChC,wBAAuB1B,MAAO0B,EAAMtD,GAApC,SACKsD,EAAMjD,MADEiD,EAAMtD,eAoEX,cAACsC,EAAA,EAAD,CAAKE,GAAI,EAAGtC,UAAU,qCAAtB,SACKkB,EAAa,+BAAKA,EAAL,OAAyB,OAG3C,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACKlB,EAAcf,aAAaC,SAAS6C,KAjD1B,SAACE,GAAD,OAC3B,eAACjB,EAAA,EAAD,CAA4BpC,UAAU,6BAAtC,UACI,cAACqC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAae,EAAYlD,OACzB,cAACkC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACC,EAAA,EAAKG,QAAN,CACI1C,UAzDU,oBA0DVG,KAAMkD,EAAYlD,KAClBmD,YAAaD,EAAY9C,KACzBgD,KAAK,OACLX,SAAU,SAACrB,GAAD,OACNF,EAAkBgC,EAAYlD,KAAMoB,UAT1C8B,EAAYlD,oB,QCzDjBqD,EAAQ,WACjB,IAAMC,EAAUC,iBAAwB,MAGxC,OACI,gCACI,4CACA,uBAFJ,YAGa,+BANP,IAOF,uBAJJ,YAKa,+BAPP,IAQF,uBACA,cAACnB,EAAA,EAAD,CACIoB,IAAKF,EACLG,SAAU,SAACrC,GAAW,IAAD,EACjBA,EAAMsC,iBAMN,IAAMC,EAAU,UAAGL,EAAQM,eAAX,aAAG,EAAiBC,uBAChC,SAGJF,GACIhB,MAAMC,KAAKe,GAAYhC,SAAQ,SAACmC,GAE5BC,QAAQC,IAAIF,EAAQG,aAAa,SACjCF,QAAQC,IAAIF,EAAQG,aAAa,cAjBjD,SAqBI,eAAC7B,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKG,QAAN,CACIvC,KAAK,IACLoD,KAAK,SACLvD,UAAU,QACVqE,aApCV,IAsCM,cAAC9B,EAAA,EAAKG,QAAN,CACIvC,KAAK,IACLoD,KAAK,SACLvD,UAAU,QACVqE,aAzCV,IA2CM,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUhB,KAAK,SAA/B,6BCxBLiB,EAnBH,kBACR,cAAC,IAAD,UACI,gCACI,cAAC,EAAD,IAEA,sBAAMxE,UAAU,OAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyE,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,EAAD,iBCLxBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ5B,SAAS6B,eAAe,W","file":"static/js/main.bb8e66d6.chunk.js","sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport React from 'react'\n\n// ---------------------------\n//  External Dependencies\n// ---------------------------\nimport { Link } from 'react-router-dom'\nimport { Nav, Navbar } from 'react-bootstrap'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const NavigBar = () => {\n    return (\n        <Navbar bg='light' expand='lg'>\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\n            <Navbar.Collapse id='basic-navbar-nav'>\n                <Nav className='mx-auto'>\n                    <Link className='nav-link' to='/'>\n                        Home\n                    </Link>\n                    <Link className='nav-link' to='/about'>\n                        About\n                    </Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n","import { Plant } from 'production-efficiency/models'\n\nconst tomato: Plant = {\n    id: 0,\n    name: 'Tomato',\n    description: 'I am an aweful red tomato ;)',\n    requirements: {\n        minerals: [\n            {\n                name: 'Nitrogen',\n                unit: '%',\n                min: 2.28,\n                max: 4.89,\n                avg: 3.9\n            },\n            {\n                name: 'Phosphorus',\n                unit: '%',\n                min: 0.26,\n                max: 0.71,\n                avg: 0.6\n            },\n            {\n                name: 'Potassum',\n                unit: '%',\n                min: 3.06,\n                max: 5.43,\n                avg: 4.3\n            },\n            {\n                name: 'Sulfur',\n                unit: '%',\n                min: 0.94,\n                max: 4.15,\n                avg: 2.3\n            },\n            {\n                name: 'Calcium',\n                unit: '%',\n                min: 0.94,\n                max: 4.15,\n                avg: 2.3\n            },\n            {\n                name: 'Magnesium',\n                unit: '%',\n                min: 0.21,\n                max: 0.64,\n                avg: 0.4\n            },\n            {\n                name: 'Iron',\n                unit: 'ppm',\n                min: 79.8,\n                max: 193.2,\n                avg: 121.5\n            },\n            {\n                name: 'Manganese',\n                unit: 'ppm',\n                min: 32.8,\n                max: 225.7,\n                avg: 95.5\n            },\n            {\n                name: 'Copper',\n                unit: 'ppm',\n                min: 6.9,\n                max: 69.2,\n                avg: 18.0\n            },\n            {\n                name: 'Zinc',\n                unit: 'ppm',\n                min: 27.3,\n                max: 86.1,\n                avg: 46.6\n            }\n        ]\n    }\n}\n\nconst fasulye: Plant = {\n    id: 1,\n    name: 'Fasulya',\n    description: 'I am an aweful red tomato ;)',\n    requirements: {\n        minerals: [\n            {\n                name: 'Nitrogen',\n                unit: '%',\n                min: 2.28,\n                max: 4.89,\n                avg: 3.9\n            },\n            {\n                name: 'Phosphorus',\n                unit: '%',\n                min: 0.26,\n                max: 0.71,\n                avg: 0.6\n            },\n            {\n                name: 'Magnesium',\n                unit: '%',\n                min: 0.21,\n                max: 0.64,\n                avg: 0.4\n            },\n            {\n                name: 'Iron',\n                unit: 'ppm',\n                min: 79.8,\n                max: 193.2,\n                avg: 121.5\n            },\n            {\n                name: 'Manganese',\n                unit: 'ppm',\n                min: 32.8,\n                max: 225.7,\n                avg: 95.5\n            },\n            {\n                name: 'Copper',\n                unit: 'ppm',\n                min: 6.9,\n                max: 69.2,\n                avg: 18.0\n            },\n            {\n                name: 'Zinc',\n                unit: 'ppm',\n                min: 27.3,\n                max: 86.1,\n                avg: 46.6\n            }\n        ]\n    }\n}\nexport const PLANT_LIST: Plant[] = [tomato, fasulye]\n","// eslint-disable-next-line no-use-before-define\nimport React, { useState } from 'react'\nimport { Container, Row, Col, Form } from 'react-bootstrap'\nimport { PLANT_LIST } from 'production-efficiency/constants/'\nimport { Plant, Requirements } from 'production-efficiency/models'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const Home = () => {\n    const INITIAL_PLANT = PLANT_LIST[0]\n    const REQUIREMENT_FIELD = 'requirement-field'\n\n    // states\n    const [selectedPlantId, setSelectedPlantId] = useState<number>(\n        INITIAL_PLANT.id\n    )\n    const [formFields, setFormFields] = useState<Record<string, string>>({})\n    const [efficiency, setEfficiency] = useState<number>(0)\n\n    // constants\n    const selectedPlant: Plant = PLANT_LIST[selectedPlantId]\n\n    // events\n    const plantTypeSelectEvent = (event: React.ChangeEvent<any>) => {\n        setSelectedPlantId(parseInt(event.target.value))\n\n        // reset form values and states\n        setEfficiency(0)\n        setFormFields({})\n\n        Array.from(document.querySelectorAll('input')).forEach(\n            (input) => (input.value = '')\n        )\n    }\n\n    // ui render methods\n    const renderPlantTypeSelectOption = (plant: Plant) => (\n        <option key={plant.id} value={plant.id}>\n            {plant.name}\n        </option>\n    )\n\n    const magicFunc = () => {\n        let tempEfficieny = 0\n\n        Object.keys(formFields).forEach((key) => {\n            tempEfficieny += parseFloat(formFields[key])\n        })\n\n        setEfficiency(tempEfficieny)\n    }\n\n    const handleInputChange = (\n        index: string,\n        event: React.ChangeEvent<any>\n    ) => {\n        const values = formFields\n        values[index] = event.target.value\n        setFormFields(values)\n        magicFunc()\n    }\n\n    const renderRequirementField = (requirement: Requirements) => (\n        <Row key={requirement.name} className='justify-content-center m-1'>\n            <Col md={2}>{requirement.name}</Col>\n            <Col md={10}>\n                <Form.Control\n                    className={REQUIREMENT_FIELD}\n                    name={requirement.name}\n                    placeholder={requirement.unit}\n                    type='text'\n                    onChange={(event) =>\n                        handleInputChange(requirement.name, event)\n                    }\n                />\n            </Col>\n        </Row>\n    )\n\n    return (\n        <Container fluid>\n            <Row className='text-center'>\n                <Col md={12}>\n                    <h2>Efficiency Calculator ({selectedPlant.name})</h2>\n                </Col>\n            </Row>\n            <hr />\n            <Form>\n                <Row className='justify-content-center'>\n                    <Col md={6}>\n                        <Form.Group\n                            controlId='exampleForm.ControlSelect1'\n                            className='m-2'\n                        >\n                            <Form.Control\n                                as='select'\n                                value={selectedPlantId}\n                                onChange={plantTypeSelectEvent}\n                            >\n                                {PLANT_LIST.map(renderPlantTypeSelectOption)}\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n\n                <Row md={5} className='text-center justify-content-center'>\n                    {efficiency ? <h1>{efficiency}%</h1> : null}\n                </Row>\n\n                <Row>\n                    <Col md={12}>\n                        {selectedPlant.requirements.minerals.map(\n                            renderRequirementField\n                        )}\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n    )\n}\n","// eslint-disable-next-line no-use-before-define\nimport React, { useRef } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const About = () => {\n    const formRef = useRef<HTMLFormElement>(null)\n    const x = 2\n    const y = 2\n    return (\n        <div>\n            <h2>About Page</h2>\n            <hr />\n            Result1: <span>{x}</span>\n            <hr />\n            Result2: <span>{y}</span>\n            <hr />\n            <Form\n                ref={formRef}\n                onSubmit={(event) => {\n                    event.preventDefault()\n                    // const formData = new FormData(event.target),\n                    // formDataObj = Object.fromEntries(formData.entries())\n                    // console.log(formDataObj)\n                    // // console.log(event.target)\n\n                    const collection = formRef.current?.getElementsByClassName(\n                        'input'\n                    )\n\n                    collection &&\n                        Array.from(collection).forEach((element) => {\n                            // console.log(element)\n                            console.log(element.getAttribute('name'))\n                            console.log(element.getAttribute('value'))\n                        })\n                }}\n            >\n                <Form.Group>\n                    <Form.Control\n                        name='x'\n                        type='number'\n                        className='input'\n                        defaultValue={x}\n                    />\n                    <Form.Control\n                        name='y'\n                        type='number'\n                        className='input'\n                        defaultValue={y}\n                    />\n                    <Button variant='primary' type='submit'>\n                        Submit\n                    </Button>\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { NavigBar } from 'production-efficiency/components'\nimport { About, Home } from 'production-efficiency/pages'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst App = () => (\n    <Router>\n        <div>\n            <NavigBar />\n\n            <main className='pt-4'>\n                <Switch>\n                    <Route path='/about'>\n                        <About />\n                    </Route>\n                    <Route path='/'>\n                        <Home />\n                    </Route>\n                </Switch>\n            </main>\n        </div>\n    </Router>\n)\n\nexport default App\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n// ---------------------------.\n//  External Dependencies\n// ---------------------------\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// ---------------------------\n//  Project Dependencies\n// ---------------------------\nimport App from 'production-efficiency/App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}